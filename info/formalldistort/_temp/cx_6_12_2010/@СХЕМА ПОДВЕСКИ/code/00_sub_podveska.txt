global POLE#()
global ugol_povorot_pravo#(),ugol_povorot_levo#()
global n_ko_reg_p#,n_ko_reg_l#
global X_kurs#,Y_kurs#,Z_kurs#,A_kurs#,B_kurs#,C_kurs#,D_kurs#
global D_cm_rul#,ugol_ko_max#
global ko_do_cm#(),ko_do_rul#(),ko_levee_cm#(),ko_vblwe_cm#(),op_vblwe_cm#(),napravo#,nalevo#
global tra#()
global n_dS_kon#(),dS_kon_n#,dS_kon#(),S_kon#(),ko_n#,n_ko#

global E_okr#(),E_0_okr#(),del_E_okr#(),E_kol#(),E_torm#(),E_tre#(),E_wstu#(),E_kord#(),E_prot#()
global J_wstu#(),eps_wstu#(),ome_0_wstu#(),ome_wstu#(),del_alf_wstu#(),E_i_wstu#(),E_k_wstu#(),del_A_wstu#()
global J_kord#(),eps_kord#(),ome_0_kord#(),ome_kord#(),del_alf_kord#(),E_i_kord#(),E_k_kord#(),del_A_kord#()
global J_prot#(),eps_prot#(),ome_0_prot#(),ome_prot#(),del_alf_prot#(),E_i_prot#(),E_k_prot#(),del_A_prot#()
global E_i_0_wstu#(),E_i_0_kord#(),E_i_0_prot#(),E_k_0_wstu#(),E_k_0_kord#(),E_k_0_prot#(),del_alf_0_wstu#(),del_alf_0_prot#()

sub podveska()

dim dR_kat#(n_dS_kon,n_ko),dPRO_win_rad#(n_dS_kon,n_ko)

redim E_okr(n_ko),E_0_okr(n_ko),del_E_okr(n_ko),E_kol(n_ko),E_torm(n_ko),E_tre(n_ko),E_wstu(n_ko),E_kord(n_ko),E_prot(n_ko)
redim J_wstu(n_ko),eps_wstu(n_ko),ome_0_wstu(n_ko),ome_wstu(n_ko),del_alf_wstu(n_ko),E_i_wstu(n_ko),E_k_wstu(n_ko),del_A_wstu(n_ko)
redim J_kord(n_ko),eps_kord(n_ko),ome_0_kord(n_ko),ome_kord(n_ko),del_alf_kord(n_ko),E_i_kord(n_ko),E_k_kord(n_ko),del_A_kord(n_ko)
redim J_prot(n_ko),eps_prot(n_ko),ome_0_prot(n_ko),ome_prot(n_ko),del_alf_prot(n_ko),E_i_prot(n_ko),E_k_prot(n_ko),del_A_prot(n_ko)
redim E_i_0_wstu(n_ko),E_i_0_kord(n_ko),E_i_0_prot(n_ko),E_k_0_wstu(n_ko),E_k_0_kord(n_ko),E_k_0_prot(n_ko),del_alf_0_wstu(n_ko),del_alf_0_prot(n_ko)
//блок массивов для вращения колеса

redim n_dS_kon(n_ko),S_kon(n_ko)


redim POLE(n_ko)
for i = 1 to n_ko
POLE(i)=FIX((dik8(i)^2+R_win(i)^2)^0.5+1)
next i

D_cm_rul = X_rul-X_cm

//однократное вычисление

redim ko_do_cm(n_ko)
for i = 1 to n_ko
if X_ko(i)>X_cm then: ko_do_cm(i)=1
elseif X_ko(i)<X_cm then: ko_do_cm(i)=-1
else: ko_do_cm(i)=0: end if
next i
//однокр просчет нах.кол. до cm или после

redim ko_levee_cm(n_ko)
for i = 1 to n_ko
if Y_ko(i)>Y_cm then: ko_levee_cm(i)=1
elseif Y_ko(i)<Y_cm then: ko_levee_cm(i)=-1
else: ko_levee_cm(i)=0: end if
next i
//однокр просчет нах.кол. левее cm (+1) или правее (-1)

redim ko_do_rul(n_ko)
for i = 1 to n_ko
if X_ko(i)>X_rul then: ko_do_rul(i)=1
elseif X_ko(i)<X_rul then: ko_do_rul(i)=-1
else: ko_do_rul(i)=0: end if
next i
//

redim ko_vblwe_cm(n_ko)
redim op_vblwe_cm(n_ko)
for i = 1 to n_ko
if Z_op(i)>Z_cm then: op_vblwe_cm(i)=1
elseif Z_op(i)<Z_cm then: op_vblwe_cm(i)=-1
else: op_vblwe_cm(i)=0: end if
next i
//однокр просчет нах.опора выше cm или ниже

call rulevoe(X_rul,Y_rul,Z_rul,X_ko(),Y_ko(),Z_ko())
//однократный просчет параметров регулирующих поворот колес


do until X_cm(0)>= way_OX or Y_cm(0)<Y_min_way or Y_cm(0)>Y_max_way 
time=time+dt

call sdvig_mass(X_cm,Y_cm,Z_cm,X_prod,Y_prod,Z_prod,X_pop,Y_pop,Z_pop _
,d_S_o1,d_S_o2,d_S_o3,d_a_o1,d_a_o2,d_a_o3, _
X_ko(),Y_ko(),Z_ko(),znak_P1(),znak_P2(),znak_P3(),pplko_P1(),pplko_P2(),pplko_P3(),S_amo(),PRO_amo(),d_S_ko(),X_op(),Y_op(),Z_op())
//после выполнения имеем новые координаты точек cm,pop,prod наклон плоскостей и координаты точек (ko) и (op)

call ko_vblsoko(X_ko(),Y_ko(),Z_ko())
//после выполнения имеем новые значения ko_vblwe_cm

call povorot_koles(X_cm,Y_cm,Z_cm,X_ko(),Y_ko(),Z_ko(),pplko_P1(),pplko_P2(),pplko_P3(),A_ko(),B_ko(),C_ko(),D_ko())
//после выполнения имеем A_ko,B_ko,C_ko,D_ko плоскостей колес

call dots_around(X_ko(),Y_ko(),Z_ko(),A_ko(),B_ko(),C_ko(),R_win())
//после выполнения имеем новые треугольники контакта для всех колес

call S_kon_ko()
//имеем площади контакта для каждого колеса

call progib_win_rad(X_ko(),Y_ko(),Z_ko(),A_ko(),B_ko(),C_ko(),Rwin(),dR_kat(),dPRO_win_rad())
//после выполнения имеем радиальные прогибы и радиусы всех контактирущих точек шины для каждой шины

call F_win_rad(X_cm,Y_cm,Z_cm,A_ko(),B_ko(),C_ko(),X_ko(),Y_ko(),Z_ko(),X_op(),Y_op(),Z_op(),pplko_P1(),pplko_P2(),pplko_P3(),dPRO_win_rad(), _
F_win_rad_vert(),F_win_rad_pop(),F_win_rad_prod(), _
M_win_rad_pop(),M_win_rad_prod(),M_win_rad_gor_pop(),M_win_rad_gor_prod(), _
F_win_rad_cm_vert(),F_win_rad_cm_pop(),F_win_rad_cm_prod())
//имеем величины сил и моментов 

call F_win_bok(X_cm,Y_cm,Z_cm,A_ko(),B_ko(),C_ko(),X_ko(),Y_ko(),Z_ko(),X_op(),Y_op(),Z_op(),pplko_P1(),pplko_P2(),pplko_P3(),dPRO_win_rad(), _
F_win_bok_pop(),F_win_bok_prod(), _
M_win_bok_pop(),M_win_bok_prod(),M_win_bok_gor_pop(),M_win_bok_gor_prod(), _
F_win_bok_cm_vert(),F_win_bok_cm_pop(),F_win_bok_cm_prod())
//имеем величины сил и моментов 

call krutit_koleso()
//имеем колесный момент для вычисления колесной силы для каждого колеса



loop

end sub